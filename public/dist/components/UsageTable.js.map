//Developed by Sy Le. Coprighted by Salesforce.com 2015
{"version":3,"sources":["UsageTable.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAM,UAAU,GAAG,KAAK,CAAC,WAAW,CAAC;;AACpC,gBAAe,6BAAE;AAChB,SAAO;AACN,aAAU,EAAG,KAAK;GAClB,CAAA;EACD;AACD,OAAM,oBAAE;;;AACP,MAAM,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC;AAC3D,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;;AAEjC,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,UAAC,QAAQ,EAAE,GAAG,EAAK;AAChD,OAAM,mBAAmB,GAAG,QAAQ,CAAC,eAAe,CAAC;;AAErD,OAAM,cAAc,GAAG,MAAK,KAAK,CAAC,UAAU,GACzC,MAAK,eAAe,CAAE,mBAAmB,EAAE,QAAQ,CAAC,OAAO,CAAE,GAC7D,MAAK,iBAAiB,CAAE,mBAAmB,EAAE,QAAQ,CAAC,OAAO,CAAE,CAAC;;AAEnE,UACC;;MAAK,GAAG,EAAK,mBAAmB,yBAAoB,GAAG,AAAG,EAAC,SAAS,EAAC,MAAM;IAC1E;;;KACC,mDAAmB,QAAQ,EAAE,mBAAmB,AAAC,GAAG;KAC/C;IAEL,cAAc;IACV,CACL;GACF,CAAC,CAAC;;AAEH,SACC;;KAAK,GAAG,EAAK,mBAAmB,iBAAe;GAC9C;;MAAK,SAAS,EAAC,MAAM;IACpB;;OAAI,SAAS,EAAC,6BAA6B;KAC1C;;QAAI,IAAI,EAAC,cAAc,EAAC,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,GAAG,EAAE,AAAC,EAAC,OAAO,EAAE;eAAK,MAAK,gBAAgB,CAAC,OAAO,CAAC;QAAA,AAAC;MACvH;;;;OAAiB;MACb;KACL;;QAAI,IAAI,EAAC,cAAc,EAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,GAAG,EAAE,AAAC,EAAC,OAAO,EAAE;eAAK,MAAK,gBAAgB,CAAC,KAAK,CAAC;QAAA,AAAC;MACpH;;;;OAAe;MACX;KACD;IACA;GACN;;MAAK,EAAE,EAAC,mBAAmB;IAAE,SAAS;IAAO;GACxC,CACL;EACF;AACD,gBAAe,2BAAC,OAAO,EAAE,OAAO,EAAC;AAChC,SACC;AACC,UAAO,EAAE,OAAO,AAAC;AACjB,UAAO,EAAE,OAAO,AAAC,GAAG,CACpB;EACF;AACD,kBAAiB,6BAAC,OAAO,EAAE,OAAO,EAAC;AAClC,SACC;AACC,UAAO,EAAE,OAAO,AAAC;AACjB,WAAQ,EAAC,eAAe;AACxB,aAAU,EAAC,gBAAgB;AAC3B,WAAQ,EAAC,0BAA0B;AACnC,oBAAiB,EAAE,KAAK,AAAC;AACzB,aAAU,EAAE,IAAI,AAAC;AACjB,YAAS,EAAE,IAAI,AAAC,GAAG,CACnB;EACF;AACD,iBAAgB,4BAAC,OAAO,EAAC;AACxB,MAAI,CAAC,QAAQ,CAAC;AACb,aAAU,EAAE,OAAO,KAAK,KAAK;GAC7B,CAAC,CAAC;EACH;AACD,sBAAqB,iCAAC,SAAS,EAAE,SAAS,EAAE;;AAE3C,SAAO,IAAI;AAAC,EACZ;CACD,CAAC;;;;AAAC;kBAGY,UAAU","file":"UsageTable.js","sourcesContent":["//external\nimport _ from 'lodash';\nimport util from '../util';\n\n//internal component\nimport KeyValTableComponent from './KeyValTable';\nimport KeyValueXmlSyntaxComponent from './KeyValueXmlSyntax';\nimport ControlDetailLink from './ControlDetailLink';\n\n//definitions\nconst UsageTable = React.createClass({\n\tgetInitialState(){\n\t\treturn {\n\t\t\tuseXmlForm : false\n\t\t}\n\t},\n\trender(){\n\t\tconst selectedControlName = this.props.selectedControlName;\n\t\tconst myUsage = this.props.usage;\n\n\t\tconst usagesDom = myUsage.map((usageObj, idx) => {\n\t\t\tconst subSectionLinkLabel = usageObj.controlFullName;\n\n\t\t\tconst usageDetailDom = this.state.useXmlForm\n\t\t\t\t? this._getXmlViewForm( selectedControlName, usageObj.attribs )\n\t\t\t\t: this._getTableViewForm( selectedControlName, usageObj.attribs );\n\n\t\t\treturn (\n\t\t\t\t<div key={`${subSectionLinkLabel}-usage-table-row-${idx}`} className=\"mb15\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<ControlDetailLink mainText={subSectionLinkLabel} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{usageDetailDom}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<div key={`${selectedControlName}-usage-table`}>\n\t\t\t\t<div className=\"mb15\">\n\t\t\t\t\t<ul className=\"nav nav-pills nav-justified\">\n\t\t\t\t\t\t<li role=\"presentation\" className={!this.state.useXmlForm ? 'active' : ''} onClick={()=> this.changeViewFormat('table')}>\n\t\t\t\t\t\t\t<a>Table Form</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li role=\"presentation\" className={this.state.useXmlForm ? 'active' : ''} onClick={()=> this.changeViewFormat('xml')}>\n\t\t\t\t\t\t\t<a>XML Form</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"usageTableContent\">{usagesDom}</div>\n\t\t\t</div>\n\t\t);\n\t},\n\t_getXmlViewForm(tagName, objects){\n\t\treturn (\n\t\t\t<KeyValueXmlSyntaxComponent\n\t\t\t\tobjects={objects}\n\t\t\t\ttagName={tagName} />\n\t\t);\n\t},\n\t_getTableViewForm(tagName, objects){\n\t\treturn (\n\t\t\t<KeyValTableComponent\n\t\t\t\tobjects={objects}\n\t\t\t\tkeyLabel=\"Argument Name\"\n\t\t\t\tvalueLabel=\"Argument Value\"\n\t\t\t\temptyMsg=\"Called with no arguments\"\n\t\t\t\tclickToViewDetail={false}\n\t\t\t\tshowHeader={true}\n\t\t\t\tshowIndex={true} />\n\t\t);\n\t},\n\tchangeViewFormat(newForm){\n\t\tthis.setState({\n\t\t\tuseXmlForm: newForm === 'xml'\n\t\t});\n\t},\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\t// return nextProps.selectedControlName !== this.props.selectedControlName;\n\t\treturn true;//always update\n\t}\n});\n\n\nexport default UsageTable;"],"sourceRoot":"/source/"}