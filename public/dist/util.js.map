//Developed by Sy Le. Coprighted by Salesforce.com 2015
{"version":3,"sources":["util.js"],"names":[],"mappings":";;;;;;;;;;;;kBAEe;AACd,OAAM,kBAAC,EAAE,EAAE;AACV,GAAC,CAAC;UAAM,EAAE,EAAE;GAAA,CAAC,CAAC;EACd;AACD,YAAW,uBAAC,UAAU,EAAC;AACtB,mCAA+B,UAAU,CAAG;EAC5C;AACD,cAAa,yBAAC,aAAa,EAAC;AAC3B,MAAM,YAAY,GAAG,UAAU,CAAC;AAChC,MAAM,aAAa,GAAG,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;;AAE1D,SAAO,aAAa,GAAG,CAAC,GACrB,aAAa,CAAC,MAAM,CAAC,aAAa,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,GACvE,EAAE,CAAC;EACN;;;AAED,oBAAmB,+BAAC,mBAAmB,EAAC;AACvC,SAAO,iBAAE,MAAM,CACd,mBAAmB,EACnB,UAAC,mBAAmB,EAAE,iBAAiB,EAAE,YAAY,EAAK;AACzD,oBAAE,OAAO,CAAC,iBAAiB,EAAE,UAAC,UAAU,EAAE,UAAU,EAAK;AACxD,uBAAmB,CAAI,YAAY,SAAI,UAAU,CAAG,GAAG,UAAU,CAAC;IAClE,CAAC,CAAC;;AAEH,UAAO,mBAAmB,CAAC;GAC3B,EACD,EAAE,CACF,CAAA;EACD;;;AAED,oBAAmB,+BAAC,mBAAmB,EAAE,YAAY,EAAC;AACrD,MAAI,UAAU,GAAG,mBAAmB,CAAC;AACrC,MAAI,YAAY,EAAC;;AAEhB,aAAU,GAAG,iBAAE,MAAM,CACpB,mBAAmB,EACnB,UAAC,GAAG,EAAE,UAAU,EAAE,UAAU,EAAK;AAChC,QAAI,UAAU,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAC;;AAExD,QAAG,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;KAC7B;AACD,WAAO,GAAG,CAAC;IACX,EACD,EAAE,CACF,CAAC;GACF;;AAED,SAAO,UAAU,CAAC;EAClB;AACD,uBAAsB,kCAAC,QAAQ,EAAE,aAAa,EAAC;AAC9C,SAAO,iBAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,GAC7B,iBAAE,MAAM,CACT,QAAQ,EACR,UAAC,GAAG,EAAE,MAAM,EAAE,MAAM,EAAK;AACxB,OAAI,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,EAAC;AACrD,OAAG,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;IACrB;;AAED,UAAO,GAAG,CAAC;GACX,EACD,EAAE,CACF,GACC,QAAQ,CAAC;EACZ;AACD,uBAAsB,kCAAC,UAAU,EAAC;AACjC,SAAO,iBAAE,MAAM,CACd,UAAU,EACV,UAAC,gBAAgB,EAAE,SAAS,EAAK;AAChC,UAAO,iBAAE,MAAM,CACd,gBAAgB,CAAC,MAAM,CAAC,iBAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAC1C,CAAA;GACD,EACD,EAAE,CACF,CAAC;EACF;;;AAGD,0BAAyB,qCAAC,OAAO,EAAC;AACjC,MAAM,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;AAChF,SAAO,YAAY,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,CAAC,GAAG,OAAO,CAAC;EACpE;CACD","file":"util.js","sourcesContent":["import _ from 'lodash';\n\nexport default {\n\trender(cb) {\n\t\t$(() => cb());\n\t},\n\tgetQueryUrl(searchTerm){\n\t\treturn `controls.html?search=${searchTerm}`;\n\t},\n\tgetSearchTerm(location_href){\n\t\tconst searchPrefix = '?search=';\n\t\tconst idxSearchStrt = location_href.indexOf(searchPrefix);\n\n\t\treturn idxSearchStrt > 0\n\t\t\t? location_href.substr(idxSearchStrt + searchPrefix.length).toLowerCase()\n\t\t\t: '';\n\t},\n\t//flatten to array of objects\n\tflattenDependencies(dataDependenciesMap){\n\t\treturn _.reduce(\n\t\t\tdataDependenciesMap,\n\t\t\t(flattenDependencies, namespaceControls, namespaceKey) => {\n\t\t\t\t_.forEach(namespaceControls, (controlObj, controlKey) => {\n\t\t\t\t\tflattenDependencies[`${namespaceKey}:${controlKey}`] = controlObj;\n\t\t\t\t});\n\n\t\t\t\treturn flattenDependencies;\n\t\t\t},\n\t\t\t{}\n\t\t)\n\t},\n\t//find matching page search term\n\tfindMatchingControl(flattenDependencies, targetString){\n\t\tlet resMatches = flattenDependencies;\n\t\tif (targetString){\n\t\t\t// const regex = new RegExp(`${targetString}`, 'i');//use regex\n\t\t\tresMatches = _.reduce(\n\t\t\t\tflattenDependencies,\n\t\t\t\t(res, controlObj, controlKey) => {\n\t\t\t\t\tif (controlKey.toLowerCase().indexOf(targetString) === 0){\n\t\t\t\t\t// if (controlKey.indexOf(targetString) === 0){\n\t\t\t\t\t\tres[controlKey] = controlObj;\n\t\t\t\t\t}\n\t\t\t\t\treturn res;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t);\n\t\t}\n\n\t\treturn resMatches;\n\t},\n\tfindMatchingKeysInHash(countMap, newSearchTerm){\n\t\treturn _.size(newSearchTerm) > 0\n\t\t\t? _.reduce(\n\t\t\t\tcountMap,\n\t\t\t\t(res, objVal, objKey) => {\n\t\t\t\t\tif (objKey.toLowerCase().indexOf(newSearchTerm) === 0){\n\t\t\t\t\t\tres[objKey] = objVal;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn res;\n\t\t\t\t},\n\t\t\t\t{}\n\t\t\t)\n\t\t\t: countMap;\n\t},\n\tgetUniqueArgumentsList(depArgObjs){\n\t\treturn _.reduce(\n\t\t\tdepArgObjs,\n\t\t\t(resUniqueArgList, depArgObj) => {\n\t\t\t\treturn _.unique(\n\t\t\t\t\tresUniqueArgList.concat(_.keys(depArgObj))\n\t\t\t\t)\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t},\n\n\t//strip .cmp and .app\n\tgetTagNameFromControlName(tagName){\n\t\tconst extensionIdx = tagName.lastIndexOf('.cmp') || tagName.lastIndexOf('.app');\n\t\treturn extensionIdx > 0 ? tagName.substr(0, extensionIdx) : tagName;\n\t}\n}"],"sourceRoot":"/source/"}